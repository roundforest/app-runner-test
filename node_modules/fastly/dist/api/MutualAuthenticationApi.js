"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _MutualAuthentication = _interopRequireDefault(require("../model/MutualAuthentication"));
var _MutualAuthenticationResponse = _interopRequireDefault(require("../model/MutualAuthenticationResponse"));
var _MutualAuthenticationsResponse = _interopRequireDefault(require("../model/MutualAuthenticationsResponse"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Fastly API
                                                                                                                                                                                                                                                                                                                                                                                               * Via the Fastly API you can perform any of the operations that are possible within the management console,  including creating services, domains, and backends, configuring rules or uploading your own application code, as well as account operations such as user administration and billing reports. The API is organized into collections of endpoints that allow manipulation of objects related to Fastly services and accounts. For the most accurate and up-to-date API reference content, visit our [Developer Hub](https://developer.fastly.com/reference/api/) 
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 1.0.0
                                                                                                                                                                                                                                                                                                                                                                                               * Contact: oss@fastly.com
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated.
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
* MutualAuthentication service.
* @module api/MutualAuthenticationApi
* @version 4.1.1
*/
var MutualAuthenticationApi = /*#__PURE__*/function () {
  /**
  * Constructs a new MutualAuthenticationApi. 
  * @alias module:api/MutualAuthenticationApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function MutualAuthenticationApi(apiClient) {
    _classCallCheck(this, MutualAuthenticationApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
    if (typeof window === 'undefined' && Boolean(process.env.FASTLY_API_TOKEN)) {
      this.apiClient.authenticate(process.env.FASTLY_API_TOKEN);
    }
  }

  /**
   * Create a mutual authentication using a bundle of certificates to enable client-to-server mutual TLS.
   * @param {Object} options
   * @param {module:model/MutualAuthentication} [options.mutual_authentication]
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MutualAuthenticationResponse} and HTTP response
   */
  _createClass(MutualAuthenticationApi, [{
    key: "createMutualTlsAuthenticationWithHttpInfo",
    value: function createMutualTlsAuthenticationWithHttpInfo() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var postBody = options['mutual_authentication'];
      var pathParams = {};
      var pathParamsAllowReserved = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['token'];
      var contentTypes = ['application/vnd.api+json'];
      var accepts = ['application/vnd.api+json'];
      var returnType = _MutualAuthenticationResponse["default"];
      return this.apiClient.callApi('/tls/mutual_authentications', 'POST', pathParams, pathParamsAllowReserved, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Create a mutual authentication using a bundle of certificates to enable client-to-server mutual TLS.
     * @param {Object} options
     * @param {module:model/MutualAuthentication} [options.mutual_authentication]
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MutualAuthenticationResponse}
     */
  }, {
    key: "createMutualTlsAuthentication",
    value: function createMutualTlsAuthentication() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.createMutualTlsAuthenticationWithHttpInfo(options).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Remove a Mutual TLS authentication
     * @param {Object} options
     * @param {String} options.mutual_authentication_id - Alphanumeric string identifying a mutual authentication.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
  }, {
    key: "deleteMutualTlsWithHttpInfo",
    value: function deleteMutualTlsWithHttpInfo() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var postBody = null;
      // Verify the required parameter 'mutual_authentication_id' is set.
      if (options['mutual_authentication_id'] === undefined || options['mutual_authentication_id'] === null) {
        throw new Error("Missing the required parameter 'mutual_authentication_id'.");
      }
      var pathParams = {
        'mutual_authentication_id': options['mutual_authentication_id']
      };
      var pathParamsAllowReserved = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['token'];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;
      return this.apiClient.callApi('/tls/mutual_authentications/{mutual_authentication_id}', 'DELETE', pathParams, pathParamsAllowReserved, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Remove a Mutual TLS authentication
     * @param {Object} options
     * @param {String} options.mutual_authentication_id - Alphanumeric string identifying a mutual authentication.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
  }, {
    key: "deleteMutualTls",
    value: function deleteMutualTls() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.deleteMutualTlsWithHttpInfo(options).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Show a Mutual Authentication.
     * @param {Object} options
     * @param {String} options.mutual_authentication_id - Alphanumeric string identifying a mutual authentication.
     * @param {String} [options.include] - Comma-separated list of related objects to include (optional). Permitted values: `tls_activations`. Including TLS activations will provide you with the TLS domain names that are related to your Mutual TLS authentication. 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MutualAuthenticationResponse} and HTTP response
     */
  }, {
    key: "getMutualAuthenticationWithHttpInfo",
    value: function getMutualAuthenticationWithHttpInfo() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var postBody = null;
      // Verify the required parameter 'mutual_authentication_id' is set.
      if (options['mutual_authentication_id'] === undefined || options['mutual_authentication_id'] === null) {
        throw new Error("Missing the required parameter 'mutual_authentication_id'.");
      }
      var pathParams = {
        'mutual_authentication_id': options['mutual_authentication_id']
      };
      var pathParamsAllowReserved = {};
      var queryParams = {
        'include': options['include']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['token'];
      var contentTypes = [];
      var accepts = ['application/vnd.api+json'];
      var returnType = _MutualAuthenticationResponse["default"];
      return this.apiClient.callApi('/tls/mutual_authentications/{mutual_authentication_id}', 'GET', pathParams, pathParamsAllowReserved, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Show a Mutual Authentication.
     * @param {Object} options
     * @param {String} options.mutual_authentication_id - Alphanumeric string identifying a mutual authentication.
     * @param {String} [options.include] - Comma-separated list of related objects to include (optional). Permitted values: `tls_activations`. Including TLS activations will provide you with the TLS domain names that are related to your Mutual TLS authentication. 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MutualAuthenticationResponse}
     */
  }, {
    key: "getMutualAuthentication",
    value: function getMutualAuthentication() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.getMutualAuthenticationWithHttpInfo(options).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * List all mutual authentications.
     * @param {Object} options
     * @param {String} [options.include] - Comma-separated list of related objects to include (optional). Permitted values: `tls_activations`. Including TLS activations will provide you with the TLS domain names that are related to your Mutual TLS authentication. 
     * @param {Number} [options.page_number] - Current page.
     * @param {Number} [options.page_size=20] - Number of records per page.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MutualAuthenticationsResponse} and HTTP response
     */
  }, {
    key: "listMutualAuthenticationsWithHttpInfo",
    value: function listMutualAuthenticationsWithHttpInfo() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var postBody = null;
      var pathParams = {};
      var pathParamsAllowReserved = {};
      var queryParams = {
        'include': options['include'],
        'page[number]': options['page_number'],
        'page[size]': options['page_size']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['token'];
      var contentTypes = [];
      var accepts = ['application/vnd.api+json'];
      var returnType = _MutualAuthenticationsResponse["default"];
      return this.apiClient.callApi('/tls/mutual_authentications', 'GET', pathParams, pathParamsAllowReserved, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * List all mutual authentications.
     * @param {Object} options
     * @param {String} [options.include] - Comma-separated list of related objects to include (optional). Permitted values: `tls_activations`. Including TLS activations will provide you with the TLS domain names that are related to your Mutual TLS authentication. 
     * @param {Number} [options.page_number] - Current page.
     * @param {Number} [options.page_size=20] - Number of records per page.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MutualAuthenticationsResponse}
     */
  }, {
    key: "listMutualAuthentications",
    value: function listMutualAuthentications() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.listMutualAuthenticationsWithHttpInfo(options).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Update a Mutual Authentication.
     * @param {Object} options
     * @param {String} options.mutual_authentication_id - Alphanumeric string identifying a mutual authentication.
     * @param {module:model/MutualAuthentication} [options.mutual_authentication]
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MutualAuthenticationResponse} and HTTP response
     */
  }, {
    key: "patchMutualAuthenticationWithHttpInfo",
    value: function patchMutualAuthenticationWithHttpInfo() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var postBody = options['mutual_authentication'];
      // Verify the required parameter 'mutual_authentication_id' is set.
      if (options['mutual_authentication_id'] === undefined || options['mutual_authentication_id'] === null) {
        throw new Error("Missing the required parameter 'mutual_authentication_id'.");
      }
      var pathParams = {
        'mutual_authentication_id': options['mutual_authentication_id']
      };
      var pathParamsAllowReserved = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['token'];
      var contentTypes = ['application/vnd.api+json'];
      var accepts = ['application/vnd.api+json'];
      var returnType = _MutualAuthenticationResponse["default"];
      return this.apiClient.callApi('/tls/mutual_authentications/{mutual_authentication_id}', 'PATCH', pathParams, pathParamsAllowReserved, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Update a Mutual Authentication.
     * @param {Object} options
     * @param {String} options.mutual_authentication_id - Alphanumeric string identifying a mutual authentication.
     * @param {module:model/MutualAuthentication} [options.mutual_authentication]
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MutualAuthenticationResponse}
     */
  }, {
    key: "patchMutualAuthentication",
    value: function patchMutualAuthentication() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.patchMutualAuthenticationWithHttpInfo(options).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
  return MutualAuthenticationApi;
}();
exports["default"] = MutualAuthenticationApi;